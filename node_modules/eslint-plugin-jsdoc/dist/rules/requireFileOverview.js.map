{"version":3,"sources":["../../src/rules/requireFileOverview.js"],"names":["defaultTags","file","initialCommentsOnly","mustExist","preventDuplicates","setDefaults","state","globalTags","hasDuplicates","hasTag","hasNonCommentBeforeTag","jsdocNode","utils","tags","Object","keys","tagName","targetTagName","getPreferredTagName","hasDuplicate","hasNonComment","start","exit","obj","getPreferredTagNameObject","blocked","reportSettings","replacement","iterateAllJsdocs","meta","fixable","type","nonComment","node"],"mappings":"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","sourcesContent":["// Todo[engine:node@>=7.0.0]: Replace with `Object.entries`\nimport entries from 'object.entries-ponyfill';\nimport iterateJsdoc from '../iterateJsdoc';\n\nconst defaultTags = {\n  file: {\n    initialCommentsOnly: true,\n    mustExist: true,\n    preventDuplicates: true,\n  },\n};\n\nconst setDefaults = (state) => {\n  // First iteration\n  if (!state.globalTags) {\n    state.globalTags = {};\n    state.hasDuplicates = {};\n    state.hasTag = {};\n    state.hasNonCommentBeforeTag = {};\n  }\n};\n\nexport default iterateJsdoc(({\n  jsdocNode,\n  state,\n  utils,\n}) => {\n  const tags = defaultTags;\n\n  setDefaults(state);\n\n  for (const tagName of Object.keys(tags)) {\n    const targetTagName = utils.getPreferredTagName({tagName});\n\n    const hasTag = targetTagName && utils.hasTag(targetTagName);\n\n    state.hasTag[tagName] = hasTag || state.hasTag[tagName];\n\n    const hasDuplicate = state.hasDuplicates[tagName];\n\n    if (hasDuplicate === false) {\n      // Was marked before, so if a tag now, is a dupe\n      state.hasDuplicates[tagName] = hasTag;\n    } else if (!hasDuplicate && hasTag) {\n      // No dupes set before, but has first tag, so change state\n      //   from `undefined` to `false` so can detect next time\n      state.hasDuplicates[tagName] = false;\n      state.hasNonCommentBeforeTag[tagName] = state.hasNonComment &&\n        state.hasNonComment < jsdocNode.start;\n    }\n  }\n}, {\n  exit ({state, utils}) {\n    setDefaults(state);\n    const tags = defaultTags;\n\n    for (const [tagName, {\n      mustExist,\n      preventDuplicates,\n      initialCommentsOnly,\n    }] of entries(tags)) {\n      const obj = utils.getPreferredTagNameObject({tagName});\n      if (obj && obj.blocked) {\n        utils.reportSettings(\n          `\\`settings.jsdoc.tagNamePreference\\` cannot block @${obj.tagName} ` +\n          'for the `require-file-overview` rule',\n        );\n      } else {\n        const targetTagName = obj && obj.replacement || obj;\n        if (mustExist && !state.hasTag[tagName]) {\n          utils.reportSettings(`Missing @${targetTagName}`);\n        }\n        if (preventDuplicates && state.hasDuplicates[tagName]) {\n          utils.reportSettings(\n            `Duplicate @${targetTagName}`,\n          );\n        }\n        if (initialCommentsOnly &&\n            state.hasNonCommentBeforeTag[tagName]\n        ) {\n          utils.reportSettings(\n            `@${targetTagName} should be at the beginning of the file`,\n          );\n        }\n      }\n    }\n  },\n  iterateAllJsdocs: true,\n  meta: {\n    fixable: 'code',\n    type: 'suggestion',\n  },\n  nonComment ({state, node}) {\n    if (!state.hasNonComment) {\n      state.hasNonComment = node.start;\n    }\n  },\n});\n"],"file":"requireFileOverview.js"}